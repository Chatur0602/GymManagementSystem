package Vehicle;

import static Vehicle.VehicleIoHandler.addVehicle;
import static Vehicle.VehicleIoHandler.allVehicles;
import java.time.format.DateTimeFormatter;
import static java.lang.String.format;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

public class EditVehicle extends javax.swing.JFrame {
    public static String [] columnsName = {"Vehicle ID", "Manufacturer", "Model", "Mfg Year", "Color", "Vehicle Registration","Daily Rate"};
    public static String dataRow [] ;
    
    
    VehicleIoHandler IIH; 
    public EditVehicle() {
        allVehicles.clear();
        IIH = new VehicleIoHandler();
        initComponents(); 
        
        DefaultTableModel model = (DefaultTableModel)viewVehicleTable.getModel();
        model.setRowCount(0);
        model.setColumnIdentifiers(columnsName);
        Format date =new SimpleDateFormat("dd-MM-yyyy");
       
             for (Vehicle list : allVehicles) {

                dataRow = new String[] {Integer.toString(list.getID()),list.getManufacturer(),list.getModel(),Integer.toString(list.getMfgYear()),list.getColor(),list.getvReg(),Integer.toString(list.getdRate())};
                model.addRow(dataRow);
                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        exitLabel = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        saveChangesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewVehicleTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("STCaiyun", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Edit Vehicle");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 180, -1));

        exitLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exitLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive - Asia Pacific University\\Documents\\NetBeansProjects\\GymManagementSystem\\src\\main\\java\\Resources\\icons8-logout-24.png")); // NOI18N
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
        });
        jPanel3.add(exitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, -1, 20));

        backLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive - Asia Pacific University\\Documents\\NetBeansProjects\\GymManagementSystem\\src\\main\\java\\Resources\\icons8-go-back-24.png")); // NOI18N
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
        });
        jPanel3.add(backLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        saveChangesButton.setText("Save Changes");
        saveChangesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveChangesButtonMouseClicked(evt);
            }
        });
        jPanel3.add(saveChangesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 520, 110, -1));

        viewVehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        viewVehicleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewVehicleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(viewVehicleTable);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 920, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        dispose();
        VehicleManagement IM = new VehicleManagement();
        IM.show();
        allVehicles.clear();
    }//GEN-LAST:event_backLabelMouseClicked
    
    
    private void viewVehicleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewVehicleTableMouseClicked

    }//GEN-LAST:event_viewVehicleTableMouseClicked

    private void saveChangesButtonMouseClicked(java.awt.event.MouseEvent evt) {                                               
            
            DefaultTableModel model = (DefaultTableModel)viewVehicleTable.getModel();
            model.setColumnIdentifiers(columnsName);
            
            String Id = null;
            String manufacturer = null;
            String model2 = null;
            String mfgYear = null;
            String color = null ;
            String vReg = null ;
            String dRate = null ;
            boolean characterFound = false;
            boolean validated = false;
            Vehicle i = null ; 
            
            allVehicles.clear();
            
            for (int rowCount = 0; rowCount < model.getRowCount(); rowCount++){
                    Id = model.getValueAt(rowCount, 0).toString();
                    manufacturer = model.getValueAt(rowCount, 1).toString();
                    model2 = model.getValueAt(rowCount, 2).toString();
                    mfgYear = model.getValueAt(rowCount, 3).toString();
                    color = model.getValueAt(rowCount, 4).toString() ;
                    vReg = model.getValueAt(rowCount, 5).toString();
                    dRate = model.getValueAt(rowCount, 6).toString();
                    Date date = null;
                    LocalDate DOB ;
                    String dateString;
                    int Age;
                    SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    
                try {
  
                Pattern idPattern = Pattern.compile("[^0-9]");
                Matcher id = idPattern.matcher(Id);
                characterFound = id.find();
                if(characterFound == true || Integer.parseInt(Id) == 0){
                    JOptionPane.showMessageDialog(null,
                            "Incorrect Vehicle ID, Use numeric characters only", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    validated = false;
                    break;
                }else{
                            }if(characterFound == true || manufacturer.length()<2){
                    JOptionPane.showMessageDialog(null,
                    "Incorrect Manufacturer Name, Minimum 2 letters & no special characters or numbers allowed", "Warning",
                    JOptionPane.WARNING_MESSAGE);
                    break;
                } else{

                    if(characterFound == true || model2.length()<3){
                        JOptionPane.showMessageDialog(null,
                        "Incorrect Model Name, Minimum 3 letters & no special characters or numbers allowed", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                        break;
                        
                    } else{
                        Pattern contactPattern = Pattern.compile("[^0-9]");
                        Matcher contact = contactPattern.matcher(mfgYear);
                        characterFound = contact.find();
                        
                        if(characterFound == true || mfgYear.length() != 4){
                            JOptionPane.showMessageDialog(null,
                        "Incorrect Registration Year format, Must be 4 numeric digits long", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                            break;
                        }else{
                            if(vReg.length()<7){
                                JOptionPane.showMessageDialog(null,
                                "Incorrect Registration Number, Minimum 7 letters & no special characters or numbers allowed", "Warning",
                                JOptionPane.WARNING_MESSAGE);
                                break;
                                }else{
                          Matcher rate = contactPattern.matcher(dRate);
                           characterFound = rate.find();
                           if(characterFound == true || Integer.parseInt(dRate) < 50){
                               JOptionPane.showMessageDialog(null,
                                       "Incorrect daily rate, Make sure daily rate is at least MYR 50", "Warning",
                                       JOptionPane.WARNING_MESSAGE);
                               break;
                           }else{
                               i = new Vehicle(Integer.parseInt(Id), Integer.parseInt(mfgYear), Integer.parseInt(dRate), manufacturer, model2, vReg, color);
                               VehicleIoHandler.allVehicles.add(i);
                               validated = true;
                           }
            }}}} 
                } catch (NumberFormatException e){
                        JOptionPane.showMessageDialog(null,
                            "Please enter a valid Vehicle ID", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                            validated = false ;
                            break;
                } 
        }
            
        if (validated == true){
            JOptionPane.showMessageDialog(null,
                "Vehicle Data Successfully Updated", "Success",
                JOptionPane.INFORMATION_MESSAGE);
            addVehicle();
        }
            }
    
        
    
                                                                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditVehicle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backLabel;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveChangesButton;
    private javax.swing.JTable viewVehicleTable;
    // End of variables declaration//GEN-END:variables
}

